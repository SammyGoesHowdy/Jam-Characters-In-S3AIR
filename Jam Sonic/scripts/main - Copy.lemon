// palette options

global u8 change_jam_palette

function u64 getCharacterPaletteKey(u8 character)
{
	if ((character == CHARACTER_SONIC) && (change_jam_palette == 1))
	
		return "alt_character_palette_sonic"

	return base.getCharacterPaletteKey(character)
}



// signpost renderhook
function bool Standalone.onWriteToSpriteTable(s16 px, s16 py, u16 renderQueue)
{
	// Jam Sonic Signpost
	if (objA0.update_address == 0x0837b2)
	{
		u64 key = stringformat("sign_%d", objA0.animation.sprite)

		u8 atex 
		if objA0.animation.sprite == 0
			atex = 0x40


		Renderer.drawCustomSprite(key, px, py, atex, 0, renderQueue, 0, 255)
		return true
	}

	return base.Standalone.onWriteToSpriteTable(px, py, renderQueue)
}



// Bad Ending
function bool Standalone.onWriteToSpriteTable(s16 px, s16 py, u16 renderQueue)
{
    if((objA0.update_address == 0x05e18a)  && (global.characters == CHARACTER_SONIC))
    {
        bool prioFlag = (objA0.sprite_attributes & 0x8000) != 0
        u64 key = ""        
        key = stringformat("sonicend0x%x", objA0.animation.sprite)

        if(Renderer.hasCustomSprite(key))
        {
	Renderer.drawCustomSprite(key, px, py, 0x40, objA0.render_flags | (prioFlag ? SPRITE_FLAG_PRIO : 0), renderQueue)
            return true
        }
    }
 
    return base.Standalone.onWriteToSpriteTable(px, py, renderQueue)
}
